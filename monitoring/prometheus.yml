global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'trading-system'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Rules for alerting
rule_files:
  - "rules/*.yml"

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Trading Bot Application
  - job_name: 'trading-bot'
    static_configs:
      - targets: ['trading-bot-service:8000']
    metrics_path: '/metrics'
    scrape_interval: 10s
    scrape_timeout: 10s
    scheme: 'http'

  # Trading Bot WebSocket
  - job_name: 'trading-bot-websocket'
    static_configs:
      - targets: ['trading-bot-service:8080']
    metrics_path: '/ws/metrics'
    scrape_interval: 15s

  # PostgreSQL Database
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s

  # Redis Cache
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s

  # InfluxDB
  - job_name: 'influxdb'
    static_configs:
      - targets: ['influxdb:8086']
    metrics_path: '/metrics'
    scrape_interval: 30s

  # Node Exporter (System Metrics)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s

  # Kubernetes API Server
  - job_name: 'kubernetes-apiserver'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - default
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  # Kubernetes Nodes
  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)

  # Kubernetes Pods
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - trading-system
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # Custom Trading Metrics
  - job_name: 'trading-metrics'
    static_configs:
      - targets: ['trading-bot-service:8000']
    metrics_path: '/trading/metrics'
    scrape_interval: 5s
    scrape_timeout: 5s

  # AI Model Performance
  - job_name: 'ai-metrics'
    static_configs:
      - targets: ['trading-bot-service:8000']
    metrics_path: '/ai/metrics'
    scrape_interval: 30s

  # Risk Management Metrics
  - job_name: 'risk-metrics'
    static_configs:
      - targets: ['trading-bot-service:8000']
    metrics_path: '/risk/metrics'
    scrape_interval: 10s

# Remote write configuration for long-term storage
remote_write:
  - url: "http://influxdb:8086/api/v1/prom/write?db=prometheus"
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500